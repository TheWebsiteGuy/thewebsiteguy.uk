body.wn-loading,
body.wn-loading *,
body.oc-loading,
body.oc-loading * {
  cursor: wait !important;
}
.stripe-loading-indicator {
  height: 5px;
  background: transparent;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  overflow: hidden;
  z-index: 2000;
}
.stripe-loading-indicator .stripe,
.stripe-loading-indicator .stripe-loaded {
  height: 5px;
  display: block;
  background: #0090c0;
  position: absolute;
  box-shadow: inset 0 1px 1px -1px #FFF, inset 0 -1px 1px -1px #FFF;
}
.stripe-loading-indicator .stripe {
  width: 100%;
  animation: wn-infinite-loader 60s linear;
}
.stripe-loading-indicator .stripe-loaded {
  width: 100%;
  transform: translate3d(-100%, 0, 0);
  opacity: 0;
  filter: alpha(opacity=0);
}
.stripe-loading-indicator.loaded {
  opacity: 0;
  filter: alpha(opacity=0);
  transition: opacity 0.4s linear;
  transition-delay: 0.3s;
}
.stripe-loading-indicator.loaded .stripe {
  animation-play-state: paused;
}
.stripe-loading-indicator.loaded .stripe-loaded {
  opacity: 1;
  filter: alpha(opacity=100);
  transform: translate3d(0, 0, 0);
  transition: transform 0.3s linear;
}
.stripe-loading-indicator.hide {
  display: none;
}
body > div.flash-message {
  position: fixed;
  width: 500px;
  left: 50%;
  top: 13px;
  margin-left: -250px;
  background-color: #7a7e83;
  color: #ffffff;
  font-size: 14px;
  padding: 10px 30px 14px 15px;
  z-index: 10300;
  word-wrap: break-word;
  text-shadow: 0 -1px 0px rgba(0, 0, 0, 0.15);
  text-align: center;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.12), 0 1px 4px rgba(0, 0, 0, 0.24);
  border-radius: 3px;
  cursor: pointer;
}
body > div.flash-message.no-timer {
  padding-bottom: 10px;
}
body > div.flash-message .flash-timer {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: #ffffff;
  opacity: 0.5;
  border-radius: 3px;
}
body > div.flash-message .flash-timer.timeout-active {
  transition: width 6s linear;
}
body > div.flash-message .flash-timer.timeout-in {
  width: 100%;
}
body > div.flash-message .flash-timer.timeout-out {
  width: 0%;
}
body > div.flash-message.show-active,
body > div.flash-message.hide-active {
  transition: all 0.5s, width 0s;
}
body > div.flash-message.hide-out .flash-timer,
body > div.flash-message.hide-active .flash-timer {
  transition: none;
  width: 0% !important;
}
body > div.flash-message.show-in,
body > div.flash-message.hide-out {
  opacity: 0;
  filter: alpha(opacity=0);
  transform: scale(0.9);
}
body > div.flash-message.show-out,
body > div.flash-message.hide-in {
  opacity: 1;
  filter: alpha(opacity=100);
  transform: scale(1);
}
body > div.flash-message.success {
  background: #6f9927;
}
body > div.flash-message.error {
  background: #bb380c;
}
body > div.flash-message.warning {
  background: #b87410;
}
body > div.flash-message.info {
  background: #3f91cc;
}
@media (max-width: 768px) {
  body > div.flash-message {
    left: 10px;
    right: 10px;
    top: 10px;
    margin-left: 0;
    width: auto;
  }
}
a.wn-loading:after,
button.wn-loading:after,
span.wn-loading:after,
a.oc-loading:after,
button.oc-loading:after,
span.oc-loading:after {
  content: '';
  display: inline-block;
  vertical-align: middle;
  margin-left: 0.4em;
  height: 1em;
  width: 1em;
  animation: wn-rotate-loader 0.8s infinite linear;
  border: 0.2em solid currentColor;
  border-right-color: transparent;
  border-radius: 50%;
  opacity: 0.5;
  filter: alpha(opacity=50);
}
@keyframes wn-rotate-loader {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes oc-rotate-loader {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes wn-infinite-loader {
  0% {
    transform: translateX(-100%);
  }
  10% {
    transform: translateX(-50%);
  }
  20% {
    transform: translateX(-25%);
  }
  30% {
    transform: translateX(-12.5%);
  }
  40% {
    transform: translateX(-6.25%);
  }
  50% {
    transform: translateX(-3.125%);
  }
  60% {
    transform: translateX(-1.5625%);
  }
  70% {
    transform: translateX(-0.78125%);
  }
  80% {
    transform: translateX(-0.390625%);
  }
  90% {
    transform: translateX(-0.1953125%);
  }
  100% {
    transform: translateX(-0.09765625%);
  }
}
@keyframes oc-infinite-loader {
  0% {
    transform: translateX(-100%);
  }
  10% {
    transform: translateX(-50%);
  }
  20% {
    transform: translateX(-25%);
  }
  30% {
    transform: translateX(-12.5%);
  }
  40% {
    transform: translateX(-6.25%);
  }
  50% {
    transform: translateX(-3.125%);
  }
  60% {
    transform: translateX(-1.5625%);
  }
  70% {
    transform: translateX(-0.78125%);
  }
  80% {
    transform: translateX(-0.390625%);
  }
  90% {
    transform: translateX(-0.1953125%);
  }
  100% {
    transform: translateX(-0.09765625%);
  }
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/